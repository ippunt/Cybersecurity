1. Ideas for Deception: from John strand, MITRE 
2. Beable to network anything push traffic how you choose.
3. IN DMZ should only look for IOC and should point to no where but where the FW can alert on. 
4. Risks
5. Decoys, Breakcrumbs

1.
https://github.com/strandjs/ClassLabs/tree/main/Tools/IntroClass
https://attack.mitre.org/     https://attack.mitre.org/matrices/enterprise/
 https://mitre-attack.github.io/attack-navigator/   Create New Layer > Search Magnifiyer > Add Threat groups, Software, Mitigations, Data Sources
https://engage.mitre.org/matrix/

2. 
A good way to get all host traffic onto one docker container is with the use of proxy-arp and /32 routes.
 This will allow the gateway to respond to ARPs for the host on it's subnet and once the Arp is returned host traffic for hosts on the same subnet could   be sent anywhere.
You may have devices that do not support proxy arp but they likely support NAT. Nat is basically the same thing. NATing device Arps for an IP that does not belong to it but its policy it to NAT so has to respond to ARP and then NAT Policy and deliver. Can you NAT no NAT or just actually NAT to something that will alert. 

Weakness:
If all is responded to it doesn't give much away. Kind of like *.mydomain.local. Responding to everything giving anything away?
Said can be used against you but I don't see how yet. 

3.
DMZ Host -> IP in subnet but belonging to Virutal interface. Any Comms alert >> email or SIEM

4. Brake containment. Attempt to ensure no way to escape. 

5. 
DNS:
You may query DNS on a script feeding the cache so DNS non-recursive query only has limited information. 
You can place files with info you want to give them. 
Web:
Unlinked directories on website, would likely let you know there is suspicious behavior. 
Robots.txt controls web spiders. Put info in there for their hackers. Publicly exposed this is needed. Internal will likely tip off skilled hacker
they will likely know it is not publicly exposed. 
Links that redirects you to honeypot web. Of cloned sight. 
  Given FQDN and IPs your link might need to be relative to be good enough. 
Weblabyrinth - Creates pages of pages labrinth and does forever.  https://github.com/mayhemiclabs/weblabyrinth
spidertrap.py - Creates pages for pages .....
webtrap.py -o output-dir websiteurl;  trapserver.py --webroot-dir --syslog-server syslog --log-file-path logdir

Mail:
Mailoney - Mail relay in python mailoney.py i 10.10.10.10 -s SRVRName -t open_relay | postfix_creds | schizo_open_relay
SHIVA -  SPAM Honey with Intelligent Visual Analyzer

Files / Folders:
User Workstation profile that a user will not access on that workstation. 
Server temp
Shares where most users won't necessarily access. May generate false positives. 

Creds:
SAM, NTDS.dit backups that are deceptive. Appears local accounts SAM, and Domain is NTDS.dit
https://blog.netwrix.com/2021/11/30/extracting-password-hashes-from-the-ntds-dit-file/#:~:text=What%20is%20the%20Ntds.,objects%2C%20groups%20and%20group%20membership.
Clear text, tcpreplay over the wire
creds that are guessable or in rainbow tables or passwordlists.
pass-the-hash - Responder - May be used to respond with lmmnr and netbios will request on b-cast domain if DNS fails. Responder responds and request password to get the hash.
kerberos - 
 if you use mysql on cli there are ways to get the CLI command to get password: ps -efw, history, Solution: no password cli MYSQL Servers will request. 
   https://dev.mysql.com/doc/refman/5.7/en/password-security-user.html
   ps -efw, last -f /var/log/btmp, cat/home/*/.*history, grep -iR password /var/www, cat /home/*/.ssh/id*, cat /home/*/.mysql_history, 
   cat /home/*/.aws/credentials

On the wire:
alter application chksum get get the machine to drop all app traffic. However, TCP Synchronization will cause noticeable odd behavior. 
chksum may be bad so it gets dropped.
Drop it all on firewall. 
arp requests for pot, responses
dhcp
dns,llmnr,netbios ns  queryies for the pot box
web, smb, database traffic is fine as well. 

Memory:
runas /user:domain.com\admin /netonly cmd.exe; /netonly allows run in a local command while authenticating as if a netowrk user were running command.
   provided credentials will be placed in memory. 
   Not persistant upon reboot

Public:
Social Media Accounts
Help websites: post falty configs. 

Registry:
runas /user:domain.com\admin /storecred cmd.exe

General password locations on Windows:
https://www.nirsoft.net/articles/saved_password_location.html

WPAD: Web proxy Auto Discover
I'm just not sure how this is relevant.
More info coming. 
